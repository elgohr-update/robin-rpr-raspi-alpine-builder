name: Master
on:
  push:
    branches:
      - master

jobs:
  publish:
    name: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Login to Docker Container Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ${{ secrets.REGISTRY_USERNAME }}/raspi-alpine-builder
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: ${{ secrets.REGISTRY_HOST }}

  try: # Check image for ARM Cortex-A72
    runs-on: ubuntu-latest
    needs: [publish]
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        version: [ v3.11, edge ]
    env:
      # Meta Preferences
      TAG: try
      ARCH: armv8
      FILE_EXT: img.gz
      PROFILENAME: bboehmke
      # Working Directories
      OUT_DIR: /root/out
    steps:
      - name: Extract Branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      
      - name: Login to Docker Container Registry
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          DOCKER_REGISTRY_URL: ${{ secrets.REGISTRY_HOST }}
          
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      
      - name: Build Image
        run: |
          docker run \
            --name ${{ env.PROFILENAME }}_${{ env.ARCH }} \
            --security-opt seccomp=unconfined \
            --security-opt apparmor=unconfined \
            --security-opt=no-new-privileges \
            -v /mnt/proc:/newproc \
            -v "${{ github.workspace }}":"${{ github.workspace }}" \
            -v "${{ env.OUT_DIR }}":"${{ env.OUT_DIR }}" \
            -v "${{ env.TMP_DIR }}":"${{ env.TMP_DIR }}" \
            -e ALPINE_BRANCH=${{ matrix.version }} \
            -e DEFAULT_ROOT_PASSWORD=${{ env.PROFILENAME }} \
            -e OUTPUT_PATH=${{ env.OUT_DIR }} \
            -e DEFAULT_DROPBEAR_ENABLED=true \
            -e DEFAULT_HOSTNAME=${{ env.PROFILENAME }} \
            -e INPUT_PATH=${{ github.workspace }} \
            -e IMG_NAME=${{ env.PROFILENAME }}-${{ env.TAG }}-${{ steps.extract_branch.outputs.branch }}-${{ env.ARCH }} \
            ${{ secrets.REGISTRY_HOST }}/robin-rpr/raspi-alpine-builder:latest
      
      - name: Copy Artifacts
        run: |
          sudo chown -R $(whoami):$(whoami) /root
          docker cp ${{ env.PROFILENAME }}_${{ env.ARCH }}:${{ env.OUT_DIR }}/. ${{ env.OUT_DIR }}
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: |
            ${{ env.PROFILENAME }}-${{ env.TAG }}-${{ steps.extract_branch.outputs.branch }}-${{ env.ARCH }}
          path: |
            ${{ env.OUT_DIR }}/${{ env.PROFILENAME }}-${{ env.TAG }}-${{ steps.extract_branch.outputs.branch }}-${{ env.ARCH }}.${{ env.FILE_EXT }}
            ${{ env.OUT_DIR }}/${{ env.PROFILENAME }}-${{ env.TAG }}-${{ steps.extract_branch.outputs.branch }}-${{ env.ARCH }}.${{ env.FILE_EXT }}.sha256
            ${{ env.OUT_DIR }}/${{ env.PROFILENAME }}-${{ env.TAG }}-${{ steps.extract_branch.outputs.branch }}-${{ env.ARCH }}_update.${{ env.FILE_EXT }}
            ${{ env.OUT_DIR }}/${{ env.PROFILENAME }}-${{ env.TAG }}-${{ steps.extract_branch.outputs.branch }}-${{ env.ARCH }}_update.${{ env.FILE_EXT }}.sha256
          if-no-files-found: error

    
